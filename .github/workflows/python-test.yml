name: Simplified Python Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Combined test and quality job - reduces job overhead while maintaining parallelism
  test-and-quality:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: [tests, quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        
    - name: Install uv with caching
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true
        
    - name: Install dependencies
      run: uv sync --frozen --dev
      
    # Run all tests in parallel (unit, integration, evaluation, metrics)
    - name: Run test suite
      if: matrix.group == 'tests'
      run: |
        uv run pytest tests/unit/ tests/integration/ tests/evaluation/ tests/test_metrics.py \
          --cov=document_mcp --cov=src \
          --cov-report=xml --cov-report=term-missing \
          -v --tb=short --strict-markers --disable-warnings
          
    # Run E2E tests if API keys available
    - name: Run E2E tests
      if: matrix.group == 'tests' && (env.GEMINI_API_KEY != '' || env.OPENAI_API_KEY != '')
      run: |
        uv run pytest tests/e2e/ \
          --cov=document_mcp --cov=src \
          --cov-report=xml --cov-report=term-missing \
          -v --tb=short --strict-markers --disable-warnings \
          --timeout=600
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
    # Code quality checks
    - name: Run code quality checks
      if: matrix.group == 'quality'
      run: |
        uv run ruff check --output-format=github
        uv run ruff format --check  
        uv run mypy document_mcp/ || echo "Type checking completed with warnings"
        
    # Package validation
    - name: Validate package build
      if: matrix.group == 'quality'
      run: |
        uv build
        echo "âœ… Package builds successfully"
        
    - name: Upload coverage to Codecov
      if: matrix.group == 'tests'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  # Minimal cross-platform validation (only if main tests pass)
  cross-platform-check:
    needs: test-and-quality
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: macos-15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
        enable-cache: true

    - name: Install dependencies
      run: uv sync --frozen --dev

    # Run only core tests (skip E2E for cross-platform)
    - name: Run core tests
      run: |
        uv run pytest tests/unit/ tests/integration/ tests/test_metrics.py \
          -v --tb=short --maxfail=5